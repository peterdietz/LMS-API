{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "VeriCiteLmsApiV1"
    },
    "basePath": "/v1",
    "paths": {
        "/reports/submit/request/{contextID}/{assignmentID}/{userID}": {
            "post": {
                "tags": [
                  "reports"
                ],
                "operationId": "requestUploadReport",
                "description": "Request a file submission",
                "parameters": [
                    {
                        "in": "path",
                        "name": "contextID",
                        "description": "Context ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "assignmentID",
                        "description": "ID of assignment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "userID",
                        "description": "ID of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumer",
                        "description": "the consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumerSecret",
                        "description": "the consumer secret",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "reportMetaData",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReportMetaData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns urls to submit assignment to",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalContentUploadInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Error Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Error Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Error Unexpected",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:VC_AWS_REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:VC_AWS_REGION:VC_AWS_ACCOUNT_ID:function:reportRequest:alias/invocations",
                    "credentials": "arn:aws:iam::VC_AWS_ACCOUNT_ID:role/vericite_lambda_api_execution",
                    "httpMethod": "POST",
                    "responses": {
                        "Error.Invalid.*": {
                            "statusCode": "400",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unauthorized.*": {
                            "statusCode": "401",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unhandled.*": {
                            "statusCode": "500",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "default": {
                            "statusCode": "200"
                        }
                    },
                    "requestTemplates": {
                        "application/json": "{\"consumer\": \"$input.params('consumer')\",\"consumerSecret\": \"$input.params('consumerSecret')\",\"userID\": \"$input.params('userID')\",\"assignmentID\": \"$input.params('assignmentID')\",\"contextID\": \"$input.params('contextID')\",\"userFirstName\": $input.json('$.userFirstName'),\"userLastName\": $input.json('$.userLastName'),\"userEmail\": $input.json('$.userEmail'),\"userRole\": $input.json('$.userRole'),\"contextTitle\": $input.json('$.contextTitle'),\"assignmentTitle\": $input.json('$.assignmentTitle'),\"externalContentData\" : $input.json('$.externalContentData')}"
                    }
                }
            }
        },
        "/reports/scores/{contextID}": {
            "get": {
                "tags": [
                  "reports"
                ],
                "operationId": "getScores",
                "description": "Retrieves scores for the reports",
                "parameters": [
                    {
                        "in": "path",
                        "name": "contextID",
                        "description": "Context ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "assignmentID",
                        "description": "ID of assignment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userID",
                        "description": "ID of user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "externalContentID",
                        "description": "external content id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumer",
                        "description": "the consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumerSecret",
                        "description": "the consumer secret",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of report score",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportScoreReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Error Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Error Unexpected",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:VC_AWS_REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:VC_AWS_REGION:VC_AWS_ACCOUNT_ID:function:getScores:alias/invocations",
                    "credentials": "arn:aws:iam::VC_AWS_ACCOUNT_ID:role/vericite_lambda_api_execution",
                    "httpMethod": "POST",
                    "responses": {
                        "Error.Invalid.*": {
                            "statusCode": "400",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unauthorized.*": {
                            "statusCode": "401",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unhandled.*": {
                            "statusCode": "500",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "default": {
                            "statusCode": "200"
                        }
                    },
                    "requestTemplates": {
                        "application/json": "{\"consumer\" : \"$input.params('consumer')\", \"consumerSecret\" : \"$input.params('consumerSecret')\", \"externalContentID\" : \"$input.params('externalContentID')\", \"userID\" : \"$input.params('userID')\",\"assignmentID\" : \"$input.params('assignmentID')\", \"contextID\" : \"$input.params('contextID')\"}"
                    }
                }
            }
        },
        "/assignments/{contextID}/{assignmentID}": {
            "post": {
                "tags": [
                  "assignments"
                ],
                "operationId": "createUpdateAssignment",
                "description": "Create/update assignment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "contextID",
                        "description": "Context ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "assignmentID",
                        "description": "ID of assignment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumer",
                        "description": "the consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumerSecret",
                        "description": "the consumer secret",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "assignmentData",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignmentData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Url Link",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExternalContentUploadInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Error Invalid Inputs",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Error Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Error Unexpected",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:VC_AWS_REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:VC_AWS_REGION:VC_AWS_ACCOUNT_ID:function:createUpdateAssignment:alias/invocations",
                    "credentials": "arn:aws:iam::VC_AWS_ACCOUNT_ID:role/vericite_lambda_api_execution",
                    "httpMethod": "POST",
                    "responses": {
                        "Error.Invalid.*": {
                            "statusCode": "400",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unauthorized.*": {
                            "statusCode": "401",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unhandled.*": {
                            "statusCode": "500",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "default": {
                            "statusCode": "200"
                        }
                    },
                    "requestTemplates": {
                        "application/json": "{\"consumer\": \"$input.params('consumer')\",\"consumerSecret\": \"$input.params('consumerSecret')\",\"assignmentID\": \"$input.params('assignmentID')\",\"assignmentTitle\": $input.json('$.assignmentTitle'),\"assignmentInstructions\": $input.json('$.assignmentInstructions'),\"contextID\": \"$input.params('contextID')\",\"assignmentExcludeQuotes\": $input.json('$.assignmentExcludeQuotes'),\"assignmentExcludeSelfPlag\": $input.json('$.assignmentExcludeSelfPlag'),\"assignmentStoreInIndex\": $input.json('$.assignmentStoreInIndex'),\"assignmentAttachmentExternalContent\": $input.json('$.assignmentAttachmentExternalContent'), \"assignmentDueDate\": $input.json('$.assignmentDueDate'), \"assignmentGrade\": $input.json('$.assignmentGrade')}"
                    }
                }
            }
        },
        "/reports/urls/{contextID}": {
            "get": {
                "tags": [
                  "reports"
                ],
                "operationId": "getReportUrls",
                "description": "Retrieves URLS for the reports",
                "parameters": [
                    {
                        "in": "path",
                        "name": "contextID",
                        "description": "Context ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "assignmentIDFilter",
                        "description": "ID of assignment to filter results on",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userIDFilter",
                        "description": "ID of user to filter results on",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "externalContentIDFilter",
                        "description": "external content id to filter results on",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumer",
                        "description": "the consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "consumerSecret",
                        "description": "the consumer secret",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tokenUser",
                        "description": "ID of user who will view the report",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tokenUserRole",
                        "description": "role of user who will view the report",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Url Link",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportURLLinkReponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error Invalid Inputs",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Error Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Error Unexpected",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "arn:aws:apigateway:VC_AWS_REGION:lambda:path/2015-03-31/functions/arn:aws:lambda:VC_AWS_REGION:VC_AWS_ACCOUNT_ID:function:getUrls:alias/invocations",
                    "credentials": "arn:aws:iam::VC_AWS_ACCOUNT_ID:role/vericite_lambda_api_execution",
                    "httpMethod": "POST",
                    "responses": {
                        "Error.Invalid.*": {
                            "statusCode": "400",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unauthorized.*": {
                            "statusCode": "401",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "Error.Unhandled.*": {
                            "statusCode": "500",
                            "responseTemplates": {
                                "application/json": "{ \"message\" : \"$input.path('$.errorMessage')\"}"
                            }
                        },
                        "default": {
                            "statusCode": "200"
                        }
                    },
                    "requestTemplates": {
                        "application/json": "{\"consumer\" : \"$input.params('consumer')\", \"consumerSecret\" : \"$input.params('consumerSecret')\", \"externalContentIDFilter\" : \"$input.params('externalContentIDFilter')\", \"userIDFilter\" : \"$input.params('userIDFilter')\",\"assignmentIDFilter\" : \"$input.params('assignmentIDFilter')\", \"contextID\" : \"$input.params('contextID')\", \"tokenUser\" : \"$input.params('tokenUser')\", \"tokenUserRole\" : \"$input.params('tokenUserRole')\"}"
                    }
                }
            }
        }
    },
    "definitions": {
        "AssignmentData": {
            "type": "object",
            "required": [
                "assignmentTitle"
            ],
            "properties": {
                "assignmentTitle": {
                    "type": "string",
                    "description": "The title of the assignment"
                },
                "assignmentInstructions": {
                    "type": "string",
                    "description": "Instructions for assignment"
                },
                "assignmentExcludeQuotes": {
                    "type": "boolean",
                    "description": "exclude quotes"
                },
                "assignmentExcludeSelfPlag": {
                    "type": "boolean",
                    "description": "exclude self plagiarism"
                },
                "assignmentStoreInIndex": {
                    "type": "boolean",
                    "description": "store submissions in institutional index"
                },
                "assignmentDueDate": {
                    "type": "integer",
                    "description": "Assignment due date. Pass in 0 to delete."
                },
                "assignmentGrade": {
                    "type": "integer",
                    "description": "Assignment grade. Pass in 0 to delete."
                },
                "assignmentAttachmentExternalContent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalContentData"
                    }
                }
            }
        },
        "ExternalContentData": {
            "type": "object",
            "required": [
                "fileName",
                "uploadContentType",
                "uploadContentLength",
                "externalContentID"
            ],
            "properties": {
                "fileName": {
                    "type": "string",
                    "description": "The name of the file"
                },
                "uploadContentType": {
                    "type": "string",
                    "description": "The content type of the file"
                },
                "uploadContentLength": {
                    "type": "integer",
                    "description": "The content length of the file"
                },
                "externalContentID": {
                    "type": "string",
                    "description": "External Content ID"
                }
            }
        },
        "ExternalContentUploadInfo": {
            "type": "object",
            "properties": {
                "externalContentID": {
                    "type": "string",
                    "description": "ID used to ID the uploaded file"
                },
                "urlPost": {
                    "type": "string",
                    "description": "URL to submit the attachment to"
                },
                "filePath": {
                    "type": "string",
                    "description": "The file path"
                },
                "contentLength": {
                    "type": "integer",
                    "description": "The length of the file"
                },
                "contentType": {
                    "type": "string",
                    "description": "The files content type"
                }
            }
        },
        "ReportMetaData": {
            "type": "object",
            "required": [
                "externalContentData"
            ],
            "properties": {
                "userFirstName": {
                    "type": "string",
                    "description": "Users First Name"
                },
                "userLastName": {
                    "type": "string",
                    "description": "Users Last Name"
                },
                "userEmail": {
                    "type": "string",
                    "description": "Users Email"
                },
                "userRole": {
                    "type": "string",
                    "description": "User Role"
                },
                "assignmentTitle": {
                    "type": "string",
                    "description": "Title of Assignment"
                },
                "contextTitle": {
                    "type": "string",
                    "description": "Title of Context"
                },
                "externalContentData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalContentData"
                    }
                }
            }
        },
        "ReportScoreReponse": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "string"
                },
                "assignment": {
                    "type": "string"
                },
                "externalContentId": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "preliminary": {
                    "type": "boolean"
                }
            }
        },
        "ReportURLLinkReponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The url to retrieve the report"
                },
                "contextID": {
                    "type": "string",
                    "description": "Context ID."
                },
                "assignmentID": {
                    "type": "string",
                    "description": "Assignment ID."
                },
                "userID": {
                    "type": "string",
                    "description": "User ID."
                },
                "externalContentID": {
                    "type": "string",
                    "description": "external Content ID"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
